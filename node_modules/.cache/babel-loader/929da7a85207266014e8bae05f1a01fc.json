{"ast":null,"code":"var _jsxFileName = \"/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/src/context/autenticacion/authState.js\";\nimport React, { useReducer } from 'react';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport clienteAxios from '../../config/axios';\nimport tokenAuth from '../../config/token'; // eslint-disable-next-line\n\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION } from '../../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    autenticado: null,\n    usuario: null,\n    mensaje: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // FUNCIONES\n  // REGISTRO de usuario\n\n  const registrarUsuario = async datos => {\n    try {\n      const respuesta = await clienteAxios.post('/api/usuarios', datos);\n      console.log(respuesta.data);\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data\n      }); // al registrarse OBTENERMOS EL USUARIO\n\n      obtenerUsuario();\n    } catch (error) {\n      //console.log(error.response.data.msg)\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alerta\n      });\n    }\n  }; // OBTENER USUARIO autenticado\n\n\n  const obtenerUsuario = async () => {\n    // obtenemos el token del localStorage colocado por REGISTRO_EXITOSO\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      tokenAuth(token);\n    }\n\n    try {\n      const respuesta = await clienteAxios.get('/api/auth'); //console.log(respuesta.data)\n\n      dispatch({\n        type: OBTENER_USUARIO,\n        payload: respuesta.data.usuario\n      });\n    } catch (error) {\n      console.log(error.response);\n      dispatch({\n        type: LOGIN_ERROR\n      });\n    }\n  }; // INICIO DE SESIÓN\n\n\n  const iniciarSesion = async datos => {\n    try {\n      const respuesta = await clienteAxios.post('/api/auth', datos);\n      console.log(respuesta.data);\n    } catch (error) {\n      console.log(error.response.data.msg);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(authContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      registrarUsuario,\n      iniciarSesion\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/src/context/autenticacion/authState.js"],"names":["React","useReducer","authContext","authReducer","clienteAxios","tokenAuth","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","AuthState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","state","dispatch","registrarUsuario","datos","respuesta","post","console","log","data","type","payload","obtenerUsuario","error","alerta","msg","response","categoria","get","iniciarSesion","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport authContext from './authContext'\nimport authReducer from './authReducer'\nimport clienteAxios from '../../config/axios'\nimport tokenAuth from '../../config/token'\n\n// eslint-disable-next-line\nimport {\n  REGISTRO_EXITOSO,\n  REGISTRO_ERROR,\n  OBTENER_USUARIO,\n  LOGIN_EXITOSO,\n  LOGIN_ERROR,\n  CERRAR_SESION\n} from '../../types'\n\nconst AuthState = props => {\n  \n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null,\n        mensaje: null\n          \n    } \n    \n    const [ state, dispatch ] = useReducer(authReducer, initialState)\n    \n    // FUNCIONES\n    // REGISTRO de usuario\n    const registrarUsuario = async datos => {\n        \n        try {\n            const respuesta = await clienteAxios.post('/api/usuarios', datos)\n            console.log(respuesta.data)\n            \n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.data\n            })\n            \n            // al registrarse OBTENERMOS EL USUARIO\n            obtenerUsuario()\n            \n        } catch (error) {\n            //console.log(error.response.data.msg)\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: alerta              \n            })\n        }\n    }\n    \n    // OBTENER USUARIO autenticado\n    const obtenerUsuario = async () => {\n        // obtenemos el token del localStorage colocado por REGISTRO_EXITOSO\n        const token = localStorage.getItem('token')\n        \n        if(token) {\n            tokenAuth(token)\n        }\n        \n        try {\n            const respuesta = await clienteAxios.get('/api/auth')\n            //console.log(respuesta.data)\n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data.usuario\n            })\n            \n        } catch (error) {\n            console.log(error.response)\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }      \n    }\n    \n    // INICIO DE SESIÓN\n    const iniciarSesion = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/auth', datos)\n            console.log(respuesta.data)\n        } catch (error) {\n            console.log(error.response.data.msg)\n            const alerta = {\n              msg: error.response.data.msg,\n              categoria: 'alerta-error'\n            }\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta              \n            }) \n        }\n    }\n    \n    \n  \n    return(\n        <authContext.Provider\n            value={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                registrarUsuario,\n                iniciarSesion\n            }}\n        >\n            {props.children}\n        </authContext.Provider>\n    )\n  \n}\n\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}