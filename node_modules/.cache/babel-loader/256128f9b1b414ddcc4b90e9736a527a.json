{"ast":null,"code":"var _jsxFileName = \"/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/src/context/tareas/tareaState.js\";\nimport React, { useReducer } from 'react';\nimport tareaContext from './tareaContext';\nimport tareaReducer from './tareaReducer';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA } from '../../types';\nimport clienteAxios from '../../config/axios';\n\nconst TareaState = props => {\n  const initialState = {\n    tareasproyecto: [],\n    errortarea: false,\n    tareaseleccionada: null\n  }; // Crear dispatch y el state\n\n  const [state, dispatch] = useReducer(tareaReducer, initialState); // FUNCIONES\n  // Obtener las tareas de un proyecto\n\n  const obtenerTareas = async proyecto => {\n    try {\n      const resultado = await clienteAxios.get('/api/tareas', {\n        params: {\n          proyecto\n        }\n      });\n      console.log(resultado);\n      dispatch({\n        type: TAREAS_PROYECTO,\n        payload: tareas\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Agregar una tarea\n\n\n  const agregarTarea = async tarea => {\n    try {\n      const resultado = await clienteAxios.post('/api/tareas', tarea); //console.log(resultado.data)\n\n      dispatch({\n        type: AGREGAR_TAREA,\n        payload: resultado.data.tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Valida y muestra error en la tarea\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  }; // Eliminar tarea por id\n\n\n  const eliminarTarea = async (id, proyecto) => {\n    try {\n      await clienteAxios.delete(`/api/tareas/${id}`, {\n        params: {\n          proyecto\n        }\n      });\n      dispatch({\n        type: ELIMINAR_TAREA,\n        payload: id\n      });\n    } catch (error) {}\n  }; // Editar tarea\n\n\n  const actualizarTarea = async tarea => {\n    try {\n      const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\n      dispatch({\n        type: ACTUALIZAR_TAREA,\n        payload: resultado.data.tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Extraer la tarea para edición\n\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  }; // Limpiar la tarea seleccionada\n\n\n  const limpiarTarea = () => {\n    dispatch({\n      type: LIMPIAR_TAREA\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(tareaContext.Provider, {\n    value: {\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      tareaseleccionada: state.tareaseleccionada,\n      obtenerTareas,\n      agregarTarea,\n      validarTarea,\n      eliminarTarea,\n      guardarTareaActual,\n      actualizarTarea,\n      limpiarTarea\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default TareaState;","map":{"version":3,"sources":["/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/src/context/tareas/tareaState.js"],"names":["React","useReducer","tareaContext","tareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","clienteAxios","TareaState","props","initialState","tareasproyecto","errortarea","tareaseleccionada","state","dispatch","obtenerTareas","proyecto","resultado","get","params","console","log","type","payload","tareas","error","agregarTarea","tarea","post","data","validarTarea","eliminarTarea","id","delete","actualizarTarea","put","_id","guardarTareaActual","limpiarTarea","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport tareaContext from './tareaContext'\nimport tareaReducer from './tareaReducer';\n\nimport { \n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA \n} from '../../types'\nimport clienteAxios from '../../config/axios';\n\nconst TareaState = props => {\n    \n    const initialState = {\n        tareasproyecto: [],\n        errortarea: false,\n        tareaseleccionada: null\n    }\n    \n    // Crear dispatch y el state\n    const [state, dispatch] = useReducer(tareaReducer, initialState)\n    \n    // FUNCIONES\n    \n    // Obtener las tareas de un proyecto\n    const obtenerTareas = async proyecto => {\n        try {\n            const resultado = await clienteAxios.get('/api/tareas', { params: { proyecto}})\n            console.log(resultado)\n            dispatch({\n                type: TAREAS_PROYECTO,\n                payload: tareas\n            })\n            \n        } catch (error) {\n            console.log(error)\n        }\n        \n    }\n    \n    // Agregar una tarea\n    const agregarTarea = async tarea => {\n        try {\n            const resultado = await clienteAxios.post('/api/tareas', tarea)\n            //console.log(resultado.data)\n            dispatch({\n                type: AGREGAR_TAREA,\n                payload: resultado.data.tarea\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    \n    // Valida y muestra error en la tarea\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA\n        })\n    }\n    \n    // Eliminar tarea por id\n    const eliminarTarea = async (id, proyecto) => {\n        try {\n            await clienteAxios.delete(`/api/tareas/${id}`, { params: { proyecto }})\n            dispatch({\n                type: ELIMINAR_TAREA,\n                payload: id\n            })\n            \n        } catch (error) {\n            \n        }\n    }\n    \n    // Editar tarea\n    const actualizarTarea = async tarea => {\n        try {\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea)\n            dispatch({\n                type: ACTUALIZAR_TAREA,\n                payload: resultado.data.tarea\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    \n    // Extraer la tarea para edición\n    const guardarTareaActual = tarea => {\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload: tarea\n        })\n    }\n    \n    // Limpiar la tarea seleccionada\n    const limpiarTarea = () => {\n        dispatch({\n            type: LIMPIAR_TAREA\n        })\n    }\n  \n    return(\n        <tareaContext.Provider\n            value={{\n                tareasproyecto: state.tareasproyecto,\n                errortarea: state.errortarea,\n                tareaseleccionada: state.tareaseleccionada,\n                obtenerTareas,\n                agregarTarea,\n                validarTarea,\n                eliminarTarea,\n                guardarTareaActual,\n                actualizarTarea,\n                limpiarTarea\n            }}\n        >\n          {props.children}\n        </tareaContext.Provider>   \n    )\n}\n\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}