{"ast":null,"code":"import _defineProperty from\"/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from'react';import proyectoContext from'../../context/proyectos/proyectoContext';import tareaContext from'../../context/tareas/tareaContext';var FormTarea=function FormTarea(){// STATE de proyectos\nvar proyectosContext=useContext(proyectoContext);var proyecto=proyectosContext.proyecto;// obtener la fn del context de tareas\nvar tareasContext=useContext(tareaContext);var tareaseleccionada=tareasContext.tareaseleccionada,errortarea=tareasContext.errortarea,agregarTarea=tareasContext.agregarTarea,validarTarea=tareasContext.validarTarea,obtenerTareas=tareasContext.obtenerTareas,actualizarTarea=tareasContext.actualizarTarea,limpiarTarea=tareasContext.limpiarTarea;// Effect que detecta tarea seleccionada\nuseEffect(function(){if(tareaseleccionada!==null){guardarTarea(tareaseleccionada);}else{guardarTarea({nombre:''});}},[tareaseleccionada]);// STATE del formulario\nvar _useState=useState({nombre:''}),_useState2=_slicedToArray(_useState,2),tarea=_useState2[0],guardarTarea=_useState2[1];// extraer nombre de la tarea\nvar nombre=tarea.nombre;// Si no hay ningún proyecto seleccionado\nif(!proyecto)return null;// Array destructuring para extraer proyecto actual\nvar _proyecto=_slicedToArray(proyecto,1),proyectoActual=_proyecto[0];// Leer los valores del formulario\nvar handleChange=function handleChange(e){guardarTarea(_objectSpread(_objectSpread({},tarea),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();// Validar\nif(nombre.trim()===''){validarTarea();return;}// ¿Es edición o nueva tarea?\nif(tareaseleccionada===null){// Agregar la nueva tarea al state.tareas, en su proyecto y con estado \"incompleta\"\ntarea.proyecto=proyectoActual._id;tarea.estado=false;agregarTarea(tarea);}else{// editar tarea existente\nactualizarTarea(tarea);// elimina la tarea seleccionada\nlimpiarTarea();}// Obtener y filtrar tareas del proyectoActual\nobtenerTareas(proyectoActual.id);// Reiniciar el form\nguardarTarea({nombre:''});};return/*#__PURE__*/React.createElement(\"div\",{className:\"formulario\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"contenedor-input\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"input-text\",placeholder:\"Nombre tarea...\",name:\"nombre\",value:nombre,onChange:handleChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"contenedor-input\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primario btn-submit btn-block\",value:tareaseleccionada?'Guardar tarea':'Agregar tarea'}))),errortarea?/*#__PURE__*/React.createElement(\"p\",{className:\"mensaje error\"},\"Una tarea sin nombre, no es tarea ;)\"):null);};export default FormTarea;","map":{"version":3,"sources":["/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/src/components/tareas/FormTarea.js"],"names":["React","useContext","useState","useEffect","proyectoContext","tareaContext","FormTarea","proyectosContext","proyecto","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","obtenerTareas","actualizarTarea","limpiarTarea","guardarTarea","nombre","tarea","proyectoActual","handleChange","e","target","name","value","onSubmit","preventDefault","trim","_id","estado","id"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext'\nimport tareaContext from '../../context/tareas/tareaContext'\n\nconst FormTarea = () => {\n  \n      // STATE de proyectos\n      const proyectosContext = useContext(proyectoContext)\n      const { proyecto } = proyectosContext\n      \n      // obtener la fn del context de tareas\n      const tareasContext = useContext(tareaContext)\n      const { tareaseleccionada, errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea } = tareasContext\n      \n      // Effect que detecta tarea seleccionada\n      useEffect(() => {\n          if(tareaseleccionada !== null) {\n            guardarTarea(tareaseleccionada)\n          } else {\n            guardarTarea({\n              nombre: ''\n            })\n          }\n          \n      }, [tareaseleccionada])\n      \n      // STATE del formulario\n      const [tarea, guardarTarea] = useState({\n          nombre: ''\n      })\n      // extraer nombre de la tarea\n      const { nombre } = tarea;\n      \n      // Si no hay ningún proyecto seleccionado\n      if(!proyecto) return null;\n        \n      // Array destructuring para extraer proyecto actual\n      const [ proyectoActual ] = proyecto;\n      \n      // Leer los valores del formulario\n      const handleChange = e => {\n          guardarTarea({\n              ...tarea,\n              [e.target.name] : e.target.value\n          })\n      }\n      \n      const onSubmit = e => {\n          e.preventDefault();\n          // Validar\n          if(nombre.trim() === ''){\n            validarTarea()\n            return\n          }\n          \n          // ¿Es edición o nueva tarea?\n          if(tareaseleccionada === null) {\n              // Agregar la nueva tarea al state.tareas, en su proyecto y con estado \"incompleta\"\n              tarea.proyecto = proyectoActual._id\n              tarea.estado = false\n              agregarTarea(tarea)\n          } else {\n            // editar tarea existente\n            actualizarTarea(tarea)\n            // elimina la tarea seleccionada\n            limpiarTarea() \n          }\n          // Obtener y filtrar tareas del proyectoActual\n          obtenerTareas(proyectoActual.id)\n          \n          // Reiniciar el form\n          guardarTarea({\n              nombre: ''\n          })\n      }\n      \n      return (  \n          <div className='formulario'>\n              <form\n                  onSubmit={onSubmit}\n              >\n                  <div className='contenedor-input'>\n                      <input\n                          type='text'\n                          className='input-text'\n                          placeholder='Nombre tarea...'\n                          name='nombre'\n                          value={nombre}\n                          onChange={handleChange}\n                      />\n                  </div>\n                  <div className='contenedor-input'>\n                      <input\n                          type='submit'\n                          className='btn btn-primario btn-submit btn-block'\n                          value={tareaseleccionada ? 'Guardar tarea' : 'Agregar tarea'}\n                      />\n                  </div>\n              </form>\n              { errortarea \n                  ? <p className='mensaje error'>Una tarea sin nombre, no es tarea ;)</p>\n                  : null\n              }\n          </div> \n      );\n}\n \nexport default FormTarea;"]},"metadata":{},"sourceType":"module"}