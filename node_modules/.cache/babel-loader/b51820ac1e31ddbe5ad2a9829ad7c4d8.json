{"ast":null,"code":"var _jsxFileName = \"/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/src/context/proyectos/proyectoState.js\";\nimport React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO, PROYECTO_ERROR, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO } from '../../types';\nimport clienteAxios from '../../config/axios';\n\nconst ProyectoState = props => {\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    errorformulario: false,\n    proyecto: null,\n    mensaje: null\n  }; // Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); // Funciones para el CRUD\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; // Obtener los proyectos\n\n\n  const obtenerProyectos = async () => {\n    try {\n      const resultado = await clienteAxios.get('/api/proyectos');\n      dispatch({\n        type: OBTENER_PROYECTOS,\n        payload: resultado.data.proyectos\n      });\n    } catch (error) {\n      const alerta = {\n        msg: 'Hubo un error',\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  }; // Agregar nuevo proyecto\n\n\n  const agregarProyecto = async proyecto => {\n    try {\n      const resultado = await clienteAxios.post('/api/proyectos', proyecto); //console.log(resultado.data)\n      // Insertar proyecto en el state\n\n      dispatch({\n        type: AGREGAR_PROYECTO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      const alerta = {\n        msg: 'Hubo un error',\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  }; // Validar formulario nuevoProyecto\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; // Selección de proyecto en lista proyectos\n\n\n  const proyectoActual = proyectoId => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyectoId\n    });\n  }; // Eliminar proyecto\n\n\n  const eliminarProyecto = async proyectoId => {\n    try {\n      await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n      dispatch({\n        type: ELIMINAR_PROYECTO,\n        payload: proyectoId\n      });\n    } catch (error) {\n      const alerta = {\n        msg: 'Hubo un error',\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      errorformulario: state.errorformulario,\n      proyecto: state.proyecto,\n      mensaje: state.mensaje,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError,\n      proyectoActual,\n      eliminarProyecto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","proyectoContext","proyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","PROYECTO_ERROR","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","clienteAxios","ProyectoState","props","initialState","proyectos","formulario","errorformulario","proyecto","mensaje","state","dispatch","mostrarFormulario","type","obtenerProyectos","resultado","get","payload","data","error","alerta","msg","categoria","agregarProyecto","post","mostrarError","proyectoActual","proyectoId","eliminarProyecto","delete","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\n\nimport proyectoContext from './proyectoContext'\nimport proyectoReducer from './proyectoReducer'\nimport { \n    FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    PROYECTO_ERROR,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO\n} from '../../types'\n\nimport clienteAxios from '../../config/axios'\n\n\nconst ProyectoState = props => {\n \n    const initialState = {\n        proyectos: [],\n        formulario: false,\n        errorformulario: false,\n        proyecto: null,\n        mensaje: null\n    }\n    \n    // Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\n    \n    // Funciones para el CRUD\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n    \n    // Obtener los proyectos\n    const obtenerProyectos = async () => {\n        try {\n              const resultado =  await clienteAxios.get('/api/proyectos')          \n              dispatch({\n                type: OBTENER_PROYECTOS,\n                payload: resultado.data.proyectos\n              })\n        } catch (error) {\n              const alerta = {\n                  msg: 'Hubo un error',\n                  categoria: 'alerta-error'\n              }\n              dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n              })\n        }\n    }\n    \n    // Agregar nuevo proyecto\n    const agregarProyecto = async proyecto => {\n        try {\n              const resultado = await clienteAxios.post('/api/proyectos', proyecto)\n              //console.log(resultado.data)\n              // Insertar proyecto en el state\n              dispatch({\n                type: AGREGAR_PROYECTO,\n                payload: resultado.data\n              })\n        } catch (error) {\n              const alerta = {\n                  msg: 'Hubo un error',\n                  categoria: 'alerta-error'\n              }\n              dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n              })\n        }\n    }\n    \n    // Validar formulario nuevoProyecto\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n    \n    // Selección de proyecto en lista proyectos\n    const proyectoActual = proyectoId => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: proyectoId\n        })\n    }\n    \n    // Eliminar proyecto\n    const eliminarProyecto = async proyectoId => {\n        try {\n              await clienteAxios.delete(`/api/proyectos/${proyectoId}`)\n              dispatch({\n                type: ELIMINAR_PROYECTO,\n                payload: proyectoId\n              })\n        } catch (error) {\n              const alerta = {\n                  msg: 'Hubo un error',\n                  categoria: 'alerta-error'\n              }\n              dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n              })\n        }\n    }\n    \n    \n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                errorformulario: state.errorformulario,\n                proyecto: state.proyecto,\n                mensaje: state.mensaje,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual,\n                eliminarProyecto\n                \n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    )\n}\n\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}