{"ast":null,"code":"var _jsxFileName = \"/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/src/context/tareas/tareaState.js\";\nimport React, { useReducer } from 'react';\nimport tareaContext from './tareaContext';\nimport tareaReducer from './tareaReducer';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA } from '../../types';\nimport clienteAxios from '../../config/axios';\n\nconst TareaState = props => {\n  const initialState = {\n    tareasproyecto: [],\n    errortarea: false,\n    tareaseleccionada: null\n  }; // Crear dispatch y el state\n\n  const [state, dispatch] = useReducer(tareaReducer, initialState); // FUNCIONES\n  // Obtener las tareas de un proyecto\n\n  const obtenerTareas = async proyecto => {\n    console.log(proyecto);\n\n    try {\n      const resultado = await clienteAxios.get('../api/tareas', {\n        params: {\n          proyecto\n        }\n      });\n      console.log(resultado.data.tareas);\n      dispatch({\n        type: TAREAS_PROYECTO,\n        payload: resultado.data.tareas\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Agregar una tarea\n\n\n  const agregarTarea = async tarea => {\n    try {\n      const resultado = await clienteAxios.post('/api/tareas', tarea); //console.log(resultado.data)\n\n      dispatch({\n        type: AGREGAR_TAREA,\n        payload: resultado.data.tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Valida y muestra error en la tarea\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  }; // Eliminar tarea por id\n\n\n  const eliminarTarea = async (id, proyecto) => {\n    try {\n      await clienteAxios.delete(`/api/tareas/${id}`, {\n        params: {\n          proyecto\n        }\n      });\n      dispatch({\n        type: ELIMINAR_TAREA,\n        payload: id\n      });\n    } catch (error) {}\n  }; // Editar tarea\n\n\n  const actualizarTarea = async tarea => {\n    try {\n      const resultado = await clienteAxios.put(`/api/tareas/${tarea.id}`, tarea);\n      dispatch({\n        type: ACTUALIZAR_TAREA,\n        payload: resultado.data.tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Extraer la tarea para edición\n\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  }; // Limpiar la tarea seleccionada\n\n\n  const limpiarTarea = () => {\n    dispatch({\n      type: LIMPIAR_TAREA\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(tareaContext.Provider, {\n    value: {\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      tareaseleccionada: state.tareaseleccionada,\n      obtenerTareas,\n      agregarTarea,\n      validarTarea,\n      eliminarTarea,\n      guardarTareaActual,\n      actualizarTarea,\n      limpiarTarea\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default TareaState;","map":{"version":3,"sources":["/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/src/context/tareas/tareaState.js"],"names":["React","useReducer","tareaContext","tareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","clienteAxios","TareaState","props","initialState","tareasproyecto","errortarea","tareaseleccionada","state","dispatch","obtenerTareas","proyecto","console","log","resultado","get","params","data","tareas","type","payload","error","agregarTarea","tarea","post","validarTarea","eliminarTarea","id","delete","actualizarTarea","put","guardarTareaActual","limpiarTarea","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport tareaContext from './tareaContext'\nimport tareaReducer from './tareaReducer';\n\nimport { \n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA \n} from '../../types'\nimport clienteAxios from '../../config/axios';\n\nconst TareaState = props => {\n    \n    const initialState = {\n        tareasproyecto: [],\n        errortarea: false,\n        tareaseleccionada: null\n    }\n    \n    // Crear dispatch y el state\n    const [state, dispatch] = useReducer(tareaReducer, initialState)\n    \n    // FUNCIONES\n    \n    // Obtener las tareas de un proyecto\n    const obtenerTareas = async proyecto => {\n\n        console.log(proyecto);\n\n        try {\n            const resultado = await clienteAxios.get('../api/tareas', { params: { proyecto }});\n            console.log(resultado.data.tareas);\n            dispatch({\n                type: TAREAS_PROYECTO,\n                payload: resultado.data.tareas\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    \n    // Agregar una tarea\n    const agregarTarea = async tarea => {\n        try {\n            const resultado = await clienteAxios.post('/api/tareas', tarea)\n            //console.log(resultado.data)\n            dispatch({\n                type: AGREGAR_TAREA,\n                payload: resultado.data.tarea\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    \n    // Valida y muestra error en la tarea\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA\n        })\n    }\n    \n    // Eliminar tarea por id\n    const eliminarTarea = async (id, proyecto) => {\n        try {\n            await clienteAxios.delete(`/api/tareas/${id}`, { params: { proyecto }})\n            dispatch({\n                type: ELIMINAR_TAREA,\n                payload: id\n            })\n            \n        } catch (error) {\n            \n        }\n    }\n    \n    // Editar tarea\n    const actualizarTarea = async tarea => {\n        try {\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea.id}`, tarea)\n            dispatch({\n                type: ACTUALIZAR_TAREA,\n                payload: resultado.data.tarea\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    \n    // Extraer la tarea para edición\n    const guardarTareaActual = tarea => {\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload: tarea\n        })\n    }\n    \n    // Limpiar la tarea seleccionada\n    const limpiarTarea = () => {\n        dispatch({\n            type: LIMPIAR_TAREA\n        })\n    }\n  \n    return(\n        <tareaContext.Provider\n            value={{\n                tareasproyecto: state.tareasproyecto,\n                errortarea: state.errortarea,\n                tareaseleccionada: state.tareaseleccionada,\n                obtenerTareas,\n                agregarTarea,\n                validarTarea,\n                eliminarTarea,\n                guardarTareaActual,\n                actualizarTarea,\n                limpiarTarea\n            }}\n        >\n          {props.children}\n        </tareaContext.Provider>   \n    )\n}\n\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}