{"ast":null,"code":"import _defineProperty from\"/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import{Link}from'react-router-dom';import alertaContext from'../../context/alertas/alertaContext';import authContext from'../../context/autenticacion/authContext';var NuevaCuenta=function NuevaCuenta(props){// Extraer valores del alertContext\nvar contextalerta=useContext(alertaContext);var alerta=contextalerta.alerta,mostrarAlerta=contextalerta.mostrarAlerta;// Extraer valores del authContext\nvar contextauth=useContext(authContext);var mensaje=contextauth.mensaje,autenticado=contextauth.autenticado,registrarUsuario=contextauth.registrarUsuario;// Si el usuario está registrado/autenticado\nuseEffect(function(){if(autenticado){props.history.push('/proyectos');}if(mensaje){mostrarAlerta(mensaje.msg,mensaje.categoria);}// eslint-disable-next-line\n},[mensaje,autenticado,props.history]);// State para iniciar sesión\nvar _useState=useState({nombre:'',email:'',password:'',confirmar:''}),_useState2=_slicedToArray(_useState,2),usuario=_useState2[0],guardarUsuario=_useState2[1];// extraer de usuario\nvar nombre=usuario.nombre,email=usuario.email,password=usuario.password,confirmar=usuario.confirmar;var onChange=function onChange(e){guardarUsuario(_objectSpread(_objectSpread({},usuario),{},_defineProperty({},e.target.name,e.target.value)));};// Cuando se inicia sesión\nvar onSubmit=function onSubmit(e){e.preventDefault();// Validación campos rellenos\nif(nombre.trim()===''||email.trim()===''||password.trim()===''||confirmar.trim()===''){mostrarAlerta('Todos los campos requeridos','alerta-error');return;}// Password minimo 6 caracteres\nif(password.length<6){mostrarAlerta('Password mínimo 6 caracteres','alerta-error');return;}// Passwords iguales\nif(password!==confirmar){mostrarAlerta('Password no coincide','alerta-error');return;}// Pasarlo al action\nregistrarUsuario({nombre:nombre,email:email,password:password});};return/*#__PURE__*/React.createElement(\"div\",{className:\"form-usuario\"},alerta?/*#__PURE__*/React.createElement(\"div\",{className:\"alerta \".concat(alerta.categoria)},alerta.msg):null,/*#__PURE__*/React.createElement(\"div\",{className:\"contenedor-form sombra-dark\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Obtener una cuenta\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"campo-form\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"nombre\"},\"Nombre\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"nombre\",name:\"nombre\",placeholder:\"Tu nombre\",value:nombre,onChange:onChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"campo-form\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",id:\"email\",name:\"email\",placeholder:\"Tu email\",value:email,onChange:onChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"campo-form\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",id:\"password\",name:\"password\",placeholder:\"Tu password\",value:password,onChange:onChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"campo-form\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"confirmar\"},\"Confirmar password\"),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",id:\"confirmar\",name:\"confirmar\",placeholder:\"Repite tu password\",value:confirmar,onChange:onChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"campo-form\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primario btn-block\",value:\"Registrar\"}))),/*#__PURE__*/React.createElement(Link,{to:'/',className:\"enlace-cuenta\"},\"Inicar sesi\\xF3n\")));};export default NuevaCuenta;","map":{"version":3,"sources":["/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/src/components/auth/NuevaCuenta.js"],"names":["React","useState","useContext","useEffect","Link","alertaContext","authContext","NuevaCuenta","props","contextalerta","alerta","mostrarAlerta","contextauth","mensaje","autenticado","registrarUsuario","history","push","msg","categoria","nombre","email","password","confirmar","usuario","guardarUsuario","onChange","e","target","name","value","onSubmit","preventDefault","trim","length"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport alertaContext from '../../context/alertas/alertaContext'\nimport authContext from '../../context/autenticacion/authContext'\n\nconst NuevaCuenta = (props) => {\n  \n    // Extraer valores del alertContext\n    const contextalerta = useContext(alertaContext);\n    const { alerta, mostrarAlerta } = contextalerta\n    \n    // Extraer valores del authContext\n    const contextauth = useContext(authContext);\n    const { mensaje, autenticado, registrarUsuario } = contextauth\n    \n    // Si el usuario está registrado/autenticado\n    useEffect(() => {\n        if(autenticado) {\n            props.history.push('/proyectos')\n        }\n        if(mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria)\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history])\n    \n    // State para iniciar sesión\n    const [usuario, guardarUsuario] = useState({\n        nombre: '',\n        email: '',\n        password: '',\n        confirmar: ''\n    })\n    \n    // extraer de usuario\n    const { nombre, email, password, confirmar } = usuario;\n    \n    const onChange = e => {\n        guardarUsuario( {\n            ...usuario,\n            [e.target.name] : e.target.value\n        })\n    }  \n  \n    // Cuando se inicia sesión\n    const onSubmit = e => {\n        \n        e.preventDefault();\n        \n        // Validación campos rellenos\n        if ( nombre.trim() === '' || email.trim() === '' || password.trim() === '' || confirmar.trim() === '' ) {\n            mostrarAlerta('Todos los campos requeridos', 'alerta-error')\n            return\n        }\n        // Password minimo 6 caracteres\n        if ( password.length < 6 ) {\n            mostrarAlerta('Password mínimo 6 caracteres', 'alerta-error')\n            return\n        }\n        // Passwords iguales\n        if ( password !== confirmar) {\n            mostrarAlerta('Password no coincide', 'alerta-error')\n            return\n        }\n        // Pasarlo al action\n        registrarUsuario({\n            nombre,\n            email,\n            password\n        })\n      \n    }\n    \n    return (  \n      <div className='form-usuario'>\n          { alerta ? ( <div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div> ) : null}\n          <div className='contenedor-form sombra-dark'>\n              <h1>Obtener una cuenta</h1>\n              \n              <form\n                  onSubmit={onSubmit}\n              >\n                  <div className='campo-form'>\n                      <label htmlFor='nombre'>Nombre</label>\n                      <input\n                          type='text'\n                          id='nombre'\n                          name='nombre'\n                          placeholder='Tu nombre'\n                          value={nombre}\n                          onChange={onChange}\n                      />\n                  </div>\n                  <div className='campo-form'>\n                      <label htmlFor='email'>Email</label>\n                      <input\n                          type='email'\n                          id='email'\n                          name='email'\n                          placeholder='Tu email'\n                          value={email}\n                          onChange={onChange}\n                      />\n                  </div>\n                  <div className='campo-form'>\n                      <label htmlFor='password'>Password</label>\n                      <input\n                          type='password'\n                          id='password'\n                          name='password'\n                          placeholder='Tu password'\n                          value={password}\n                          onChange={onChange}\n                      />\n                  </div>\n                  <div className='campo-form'>\n                      <label htmlFor='confirmar'>Confirmar password</label>\n                      <input\n                          type='password'\n                          id='confirmar'\n                          name='confirmar'\n                          placeholder='Repite tu password'\n                          value={confirmar}\n                          onChange={onChange}\n                      />\n                  </div>\n                  <div className='campo-form'>\n                      <input \n                          type='submit'\n                          className='btn btn-primario btn-block'\n                          value='Registrar'\n                      />\n                  </div>\n              </form>\n              \n              <Link to={'/'} className='enlace-cuenta'>\n                  Inicar sesión\n              </Link>\n          </div>\n      </div>\n    );\n}\n \nexport default NuevaCuenta;"]},"metadata":{},"sourceType":"module"}