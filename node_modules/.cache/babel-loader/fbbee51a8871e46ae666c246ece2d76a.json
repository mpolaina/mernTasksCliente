{"ast":null,"code":"var _jsxFileName = \"/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/src/context/proyectos/proyectoState.js\";\nimport React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO } from '../../types';\nimport clienteAxios from '../../config/axios';\n\nconst ProyectoState = props => {\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    errorformulario: false,\n    proyecto: null\n  }; // Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); // Funciones para el CRUD\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; // Obtener los proyectos\n\n\n  const obtenerProyectos = async () => {\n    try {\n      const resultado = await clienteAxios.get('/api/proyectos');\n      dispatch({\n        type: OBTENER_PROYECTOS,\n        payload: proyectos\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Agregar nuevo proyecto\n\n\n  const agregarProyecto = async proyecto => {\n    try {\n      const resultado = await clienteAxios.post('/api/proyectos', proyecto); //console.log(resultado.data)\n      // Insertar proyecto en el state\n\n      dispatch({\n        type: AGREGAR_PROYECTO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Validar formulario nuevoProyecto\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; // Selección de proyecto en lista proyectos\n\n\n  const proyectoActual = proyectoId => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyectoId\n    });\n  }; // Eliminar proyecto\n\n\n  const eliminarProyecto = proyectoId => {\n    dispatch({\n      type: ELIMINAR_PROYECTO,\n      payload: proyectoId\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      errorformulario: state.errorformulario,\n      proyecto: state.proyecto,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError,\n      proyectoActual,\n      eliminarProyecto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["/Users/manuelpolaina/Documents/CURSOS/JUANP/React/MERNtasks/cliente/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","proyectoContext","proyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","clienteAxios","ProyectoState","props","initialState","proyectos","formulario","errorformulario","proyecto","state","dispatch","mostrarFormulario","type","obtenerProyectos","resultado","get","payload","error","console","log","agregarProyecto","post","data","mostrarError","proyectoActual","proyectoId","eliminarProyecto","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\n\nimport proyectoContext from './proyectoContext'\nimport proyectoReducer from './proyectoReducer'\nimport { \n    FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO\n} from '../../types'\n\nimport clienteAxios from '../../config/axios'\n\n\nconst ProyectoState = props => {\n \n    const initialState = {\n        proyectos: [],\n        formulario: false,\n        errorformulario: false,\n        proyecto: null\n    }\n    \n    // Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\n    \n    // Funciones para el CRUD\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n    \n    // Obtener los proyectos\n    const obtenerProyectos = async () => {\n        try {\n              const resultado =  await clienteAxios.get('/api/proyectos')          \n              dispatch({\n                type: OBTENER_PROYECTOS,\n                payload: proyectos\n              })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    \n    // Agregar nuevo proyecto\n    const agregarProyecto = async proyecto => {\n        \n        try {\n              const resultado = await clienteAxios.post('/api/proyectos', proyecto)\n              //console.log(resultado.data)\n              // Insertar proyecto en el state\n              dispatch({\n                type: AGREGAR_PROYECTO,\n                payload: resultado.data\n              })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    \n    // Validar formulario nuevoProyecto\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n    \n    // Selección de proyecto en lista proyectos\n    const proyectoActual = proyectoId => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: proyectoId\n        })\n    }\n    \n    // Eliminar proyecto\n    const eliminarProyecto = proyectoId => {\n        dispatch({\n          type: ELIMINAR_PROYECTO,\n          payload: proyectoId\n        })\n    }\n    \n    \n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                errorformulario: state.errorformulario,\n                proyecto: state.proyecto,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual,\n                eliminarProyecto\n                \n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    )\n}\n\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}